CREATE TABLE USER
(Username VARCHAR(80) NOT NULL UNIQUE,	
Salt VARCHAR(80) NOT NULL,
Hash VARCHAR(80) NOT NULL,
MasterVolume FLOAT DEFAULT 0.5 CHECK (MasterVolume >= 0 AND MasterVolume <= 1),
	MusicVolume FLOAT DEFAULT 0.5 CHECK (MusicVolume >= 0 AND MusicVolume <= 1),
	EffectsVolume FLOAT DEFAULT 0.5 CHECK (EffectsVolume >= 0 AND EffectsVolume <= 1),
	MenuVolume FLOAT DEFAULT 0.5 CHECK (MenuVolume >= 0 AND MenuVolume <= 1),
	PRIMARY KEY (Username));
    
CREATE TABLE NEWMAP_TEMPLATE
    (TemplateNumber CHAR(36) NOT NULL UNIQUE,
	FK_SaveID CHAR(36),
	Version INT,
	PRIMARY KEY (TemplateNumber));
    
CREATE TABLE SAVED_GAME
    (SaveID CHAR(36) NOT NULL UNIQUE,
     FK_Username VARCHAR(80),
     Name VARCHAR(80),
     Timestamp TIMESTAMP,
     FK_TemplateNumber CHAR(36),
     SaveParent CHAR(36),
     PRIMARY KEY (SaveID));
    
CREATE TABLE COMBATANT
    (PK_ShipID CHAR(36) NOT NULL UNIQUE,
     Docked BOOLEAN DEFAULT FALSE,
     Detected BOOLEAN DEFAULT FALSE,
     WeaponCoolDownState FLOAT,
     TargetVelocityX FLOAT,
     TargetVelocityY FLOAT,
     TargetVelocityZ FLOAT,
     PRIMARY KEY (PK_ShipID));
    
CREATE TABLE MEGASHIP
    (PK_ShipID CHAR(36) NOT NULL UNIQUE,
     FuelLimit INT,
     FuelConsumptionRate FLOAT,
     FirstLoadFlag BOOLEAN DEFAULT TRUE,
     PRIMARY KEY (PK_ShipID));
    
CREATE TABLE PLANET
    (PK_MapObjectID CHAR(36) NOT NULL UNIQUE,
     Name VARCHAR(80),
     FirstLoadFlag BOOLEAN DEFAULT TRUE,
     PRIMARY KEY (PK_MapObjectID));
    
CREATE TABLE PLANET_GUARD
    (PK_CombatantID CHAR(36) NOT NULL UNIQUE,
     RegenerationRate FLOAT,
     FK_TargetAlly CHAR(36),
     FK_Planet CHAR(36),
     PRIMARY KEY (PK_CombatantID));
    
CREATE TABLE MAP_OBJECT
    (ObjectID CHAR(36) NOT NULL UNIQUE,
     EntityTypeID INT,
     FK_SavedGame CHAR(36),
     PositionX FLOAT,
     PositionZ FLOAT,
     PRIMARY KEY (ObjectID));
    
CREATE TABLE STAR
    (PK_MapObjectID CHAR(36) NOT NULL UNIQUE,
     Name VARCHAR(80),
     PRIMARY KEY (PK_MapObjectID));
    
CREATE TABLE WEAPON_EMISSION
    (PK_MapObjectID CHAR(36) NOT NULL UNIQUE,
     RotationX FLOAT,
     RotationY FLOAT,
     RotationZ FLOAT,
     DamageLevel FLOAT,
     PowerLevel FLOAT,
     DespawnRange FLOAT,
     FK_Combatant CHAR(36),
     PRIMARY KEY (PK_MapObjectID));  
  
CREATE TABLE PLANETARY_RESOURCE
    (FK_PlanetID CHAR(36) NOT NULL,
     Type INT NOT NULL,
     RegenerationRate FLOAT,
     CurrentResourceCount FLOAT,
     MaximumResourceCount INT,
     PRIMARY KEY (FK_PlanetID, Type));
    
CREATE TABLE SHIP
    (PK_MapObjectID CHAR(36) NOT NULL UNIQUE,
     Name VARCHAR(80),
     CurrentDamageBufferAmount FLOAT,
     CurrentLifeAmount FLOAT,
     ArmorClass FLOAT,
     CurrentSpeed FLOAT,
     RotationX FLOAT,
     RotationY FLOAT,
     RotationZ FLOAT,
     VelocityX FLOAT,
     VelocityY FLOAT,
     VelocityZ FLOAT,
     PRIMARY KEY (PK_MapObjectID));
    
CREATE TABLE RESOURCE
    (FK_ShipID CHAR(36) NOT NULL,
     Type INT NOT NULL,
     Quantity INT,
     PRIMARY KEY (FK_ShipID, Type));
    
CREATE TABLE ALLY_TARGETS_ENEMY
    (FK_Ally CHAR(36) NOT NULL UNIQUE,
     FK_Enemy CHAR(36) NOT NULL UNIQUE,
     QueueNumber INT,
     PRIMARY KEY (FK_Ally, FK_Enemy));
    
CREATE TABLE ALLY
    (PK_CombatantID CHAR(36) NOT NULL UNIQUE,
     MaximumCapacity INT,
     MaximumSpeed FLOAT,
     MaximumLifeAmount FLOAT,
     MaxDamageBuffer FLOAT,
     FK_TravelTarget CHAR(36),
     TravelX FLOAT,
     TravelZ FLOAT,
     DamageValue FLOAT,
     PowerLevel FLOAT,
     DespawnRange FLOAT,
     AutoStateCoolDown FLOAT,
     FK_Megaship CHAR(36),
     TaskState INT,
     CombatStyle INT,
     ModeState INT,
     TravelMode INT,
     WeaponCollisionBox INT,
     PRIMARY KEY (PK_CombatantID));
    
/* Add foreign keys (must be separate due to circular loops and such) */

ALTER TABLE NEWMAP_TEMPLATE
     ADD CONSTRAINT FK_NEWMAP_TO_SAVEDGAME
	FOREIGN KEY (FK_SaveID) REFERENCES SAVED_GAME(SaveID);

ALTER TABLE SAVED_GAME
     ADD CONSTRAINT FK_SAVEDGAME_TO_USER
	FOREIGN KEY (FK_Username) REFERENCES USER(Username),
	ADD CONSTRAINT FK_SAVEDGAME_TO_NEWMAP
	FOREIGN KEY (FK_TemplateNumber) REFERENCES NEWMAP_TEMPLATE(TemplateNumber);
    
ALTER TABLE COMBATANT
     ADD CONSTRAINT PK_COMBATANT_TO_SHIP
	FOREIGN KEY (PK_ShipID) REFERENCES SHIP(PK_MapObjectID);

ALTER TABLE MEGASHIP
     ADD CONSTRAINT PK_MEGASHIP_TO_SHIP
	FOREIGN KEY (PK_ShipID) REFERENCES SHIP(PK_MapObjectID);
    
ALTER TABLE PLANET
     ADD CONSTRAINT PK_PLANET_TO_MAPOBJECT
	FOREIGN KEY (PK_MapObjectID) REFERENCES MAP_OBJECT(ObjectID);
    
ALTER TABLE PLANET_GUARD
	ADD CONSTRAINT PK_PLANETGUARD_TO_COMBATANT
	FOREIGN KEY (PK_CombatantID) REFERENCES COMBATANT(PK_ShipID),
	ADD CONSTRAINT FK_PLANETGUARD_TO_ALLY
	FOREIGN KEY (FK_TargetAlly) REFERENCES ALLY(PK_CombatantID),
	ADD CONSTRAINT FK_PLANETGUARD_TO_PLANET
	FOREIGN KEY (FK_Planet) REFERENCES PLANET(PK_MapObjectID);

ALTER TABLE MAP_OBJECT
     ADD CONSTRAINT FK_MAPOBJECT_TO_SAVEDGAME
	FOREIGN KEY (FK_SavedGame) REFERENCES SAVED_GAME(SaveID);

ALTER TABLE STAR
     ADD CONSTRAINT PK_STAR_TO_MAPOBJECT
	FOREIGN KEY (PK_MapObjectID) REFERENCES MAP_OBJECT(ObjectID);

ALTER TABLE WEAPON_EMISSION
     ADD CONSTRAINT PK_WEAPON_TO_MAPOBJECT
	FOREIGN KEY (PK_MapObjectID) REFERENCES MAP_OBJECT(ObjectID),
	ADD CONSTRAINT FK_WEAPON_TO_COMBATANT
	FOREIGN KEY (FK_Combatant) REFERENCES COMBATANT(PK_ShipID);

ALTER TABLE PLANETARY_RESOURCE
     ADD CONSTRAINT FK_PLANETRESOURCE_TO_PLANET
	FOREIGN KEY (FK_PlanetID) REFERENCES PLANET(PK_MapObjectID);

ALTER TABLE SHIP
     ADD CONSTRAINT PK_SHIP_TO_MAPOBJECT
	FOREIGN KEY (PK_MapObjectID) REFERENCES MAP_OBJECT(ObjectID);

ALTER TABLE RESOURCE
     ADD CONSTRAINT FK_RESOURCE_TO_SHIP
	FOREIGN KEY (FK_ShipID) REFERENCES SHIP(PK_MapObjectID);

ALTER TABLE ALLY_TARGETS_ENEMY
     ADD CONSTRAINT FK_TARGETS_TO_ALLY
	FOREIGN KEY (FK_Ally) REFERENCES ALLY(PK_CombatantID),
	ADD CONSTRAINT FK_TARGETS_TO_GUARD
	FOREIGN KEY (FK_Enemy) REFERENCES PLANET_GUARD(PK_CombatantID);

ALTER TABLE ALLY
     ADD CONSTRAINT PK_ALLY_TO_COMBATANT
	FOREIGN KEY (PK_CombatantID) REFERENCES COMBATANT(PK_ShipID),
	ADD CONSTRAINT FK_ALLY_TO_MAPOBJECT
	FOREIGN KEY (FK_TravelTarget) REFERENCES MAP_OBJECT(ObjectID),
	ADD CONSTRAINT FK_ALLY_TO_MEGASHIP
	FOREIGN KEY (FK_Megaship) REFERENCES MEGASHIP(PK_ShipID);
    
ALTER TABLE RESOURCE DROP FOREIGN KEY FK_RESOURCE_TO_SHIP; 

ALTER TABLE RESOURCE 
	ADD CONSTRAINT FK_RESOURCE_TO_SHIP 
	FOREIGN KEY (FK_ShipID) REFERENCES map_object(ObjectID) 
	ON DELETE RESTRICT ON UPDATE RESTRICT;
